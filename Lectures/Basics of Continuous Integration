Here’s the text content extracted from **PA1417 L7 Basics of Continuous Integration.pdf** for AI processing:

---

### **Basics of Continuous Integration**  
**PA1417 Lecture Unit 7**  

---

#### **Organizational Updates**  
- Lab Unit 1 grades are released. Use failures as learning opportunities.  
- Seminar moved to **Friday, 16th May 10-12:00**. Next week’s seminar shifted to **8-10:00**.  
- Zeth unavailable **23rd-25th May**; contact via email.  

---

#### **Exam Preparation**  
- **Exam Date**: 2024-05-30 (online via Inspera).  
- **Format**: Open-book (notes, course materials, internet allowed).  
- **Rules**: No collaboration; reference external sources.  
- **Structure**: Practical questions limited to Pytest (no Cypress GUI tests).  

---

### **Main Part: Continuous Integration**  

#### **Objectives**  
- Understand principles of Continuous Integration (CI).  
- Learn how automated test pipelines work in industry.  
- Apply test automation in a CI pipeline during Assignment 6.  

---

#### **Context**  
- Real-world projects involve large teams, frequent changes, and complex integrations.  
- CI ensures code changes work together early and consistently.  

---

#### **Continuous Integration (CI)**  
1. **Frequent Integration**: Merge code changes regularly.  
2. **Automated Testing**: Run tests (unit, integration) on every change.  
3. **Benefits**: Early issue detection, stable main branch, faster deployments.  

---

#### **CI Pipeline Workflow**  
1. Developer pushes code changes.  
2. CI system runs unit tests.  
3. CI runs integration tests.  
4. Human review (pull request).  
5. Merge to main branch.  
6. Further tests/deployment.  

---

### **Hands-on: GitHub Actions**  

#### **GitHub Actions Overview**  
- CI/CD platform for automating build, test, and deployment pipelines.  
- Workflows defined in `.github/workflows/` (YAML files).  

#### **Example Workflow for Python Testing**  
```yaml  
name: Python Tests  
on:  
  push:  
    branches: [main]  
  pull_request:  
    branches: [main]  
jobs:  
  test:  
    runs-on: ubuntu-latest  
    steps:  
      - uses: actions/checkout@v2  
      - name: Set up Python  
        uses: actions/setup-python@v2  
        with:  
          python-version: 3.9  
      - name: Install dependencies  
        run: pip install -r requirements.txt  
      - name: Run Unit Tests  
        run: pytest  
```  

---

#### **Steps in a CI Pipeline**  
1. **Trigger**: Push to main branch or open a pull request.  
2. **Build**: Compile code (e.g., Docker container).  
3. **Test**: Run unit/integration tests.  
4. **Review**: Human approves changes.  
5. **Merge**: Changes integrated into main branch.  

---

### **Assignment 6: CI Pipeline Setup**  
- Set up a GitHub Actions workflow for `edutask` repository.  
- Automate unit test execution on pull requests.  
- Deliverables:  
  1. Workflow file triggering tests on PRs.  
  2. Branch fixing defects in `get_user_by_email`.  
  3. Pull request link with passing tests.  

---

#### **References**  
- GitHub Actions Documentation: [https://docs.github.com/en/actions](https://docs.github.com/en/actions)  
- Humble, J., & Kim, G. (2018). *Accelerate: Building and Scaling High-Performing Technology Organizations*.  

---